(()=>{"use strict";var e={form:".popup__form",input:".popup__input",inputInvalidClass:"error_invalid",submitButton:".popup__save",inactiveButtonClass:"popup__save_invalid"};function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var n=function(){function e(t){var n=t.data,r=t.cardSelector,o=t.handleCardClick,i=t.selfId,u=t.handleDeleteButton,a=t.handleLikeClick,s=t.popupDeleteConfirmation;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._data=n,this._title=n.name,this._link=n.link,this._likes=n.likes,this._likeQuantity=n.likes.length,this._id=n._id,this._ownerId=n.owner._id,this._selfId=i,this._cardSelector=r,this._handleCardClick=o,this._handleLikeClick=a,this._handleDeleteButton=u,this._popupDeleteConfirmation=s}var n,r;return n=e,(r=[{key:"cardId",value:function(){return this._id}},{key:"removeCard",value:function(){this._element.remove()}},{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"renderCard",value:function(){var e=this;this._element=this._getTemplate();var t=this._element.querySelector(".element__cover"),n=this._element.querySelector(".element__title"),r=this._element.querySelector(".element__like-button"),o=this._element.querySelector(".element__like-button_quantity"),i=this._element.querySelector(".element__delete-button");return t.src=this._link,n.textContent=this._title,t.alt=this._title,this._likeCounter=this._element.querySelector(".element__like-button_quantity"),this._ownerId!==this._selfId&&(i.style.display="none"),this._likes.some((function(t){return e._selfId===t._id}))&&r.classList.add("element__like-button_active"),o.textContent=this._likeQuantity,this._setEventListeners(),this._element}},{key:"setLikes",value:function(e){e?this._likeCounter.textContent=e.likes.length:cardLikes.textContent=this._likeQuantity}},{key:"_handleDeleteConfirmation",value:function(){var e=this;this._popupDeleteConfirmation.setNewHandler((function(){return e._handleDeleteCard()})),this._popupDeleteConfirmation.open()}},{key:"_handleDeleteCard",value:function(){this._handleDeleteButton(this._id,this._element)}},{key:"handleLikeCard",value:function(){this._element.querySelector(".element__like-button").classList.toggle("element__like-button_active")}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".element__delete-button").addEventListener("click",(function(){return e._handleDeleteConfirmation()})),this._element.querySelector(".element__like-button").addEventListener("click",(function(t){return e._handleLikeClick(t.target,e._id,e._likeCounter,e._element)})),this._element.querySelector(".element__cover").addEventListener("click",(function(){return e._handleCardClick({title:e._title,link:e._link})}))}}])&&t(n.prototype,r),e}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var i=function(){function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o(this,"_isValid",(function(e){var t=r._form.querySelector("#".concat(e.name,"-error"));!e.validity.valid||e.validity.typeMismatch?(t.textContent=e.validationMessage,t.classList.add(r._inputInvalidClass)):(t.textContent=e.validationMessage,t.classList.remove(r._inputInvalidClass))})),o(this,"_setEventListeners",(function(){r._formInputs.forEach((function(e){e.addEventListener("input",(function(){r._isValid(e),r.setSubmitButtonState()}))}))})),o(this,"enableValidation",(function(){r._setEventListeners(),r._form.addEventListener("submit",(function(e){e.preventDefault()}))})),this._form=n,this._formInputs=Array.from(this._form.querySelectorAll(t.input)),this._input=t.input,this._inputInvalidClass=t.inputInvalidClass,this._submitButton=this._form.querySelector(t.submitButton),this._inactiveButtonClass=t.inactiveButtonClass}var t,n;return t=e,(n=[{key:"setSubmitButtonState",value:function(){this._form.checkValidity()?(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.removeAttribute("disabled")):(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.setAttribute("disabled","disabled"))}},{key:"resetError",value:function(){var e=this;this._formInputs.forEach((function(t){var n=e._form.querySelector("#".concat(t.name,"-error"));n.textContent="",n.classList.remove(e._inputInvalidClass)})),this.setSubmitButtonState()}}])&&r(t.prototype,n),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=t,this._container=n}var t,n;return t=e,(n=[{key:"addCard",value:function(e){this._container.append(e)}},{key:"addCustomCard",value:function(e){this._container.prepend(e)}},{key:"addInitialCards",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}}])&&u(t.prototype,n),e}();function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=t,this._closeEscPopup=this._closeEscPopup.bind(this),this._closeOverlayClick=this._closeOverlayClick.bind(this),this._popupButtonClose=this._popup.querySelector(".popup__close"),this._submitButton=this._popup.querySelector(".popup__save"),this._submitButton&&(this._defaultButtonText=this._submitButton.textContent)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._closeEscPopup),this._popup.addEventListener("mousedown",this._closeOverlayClick)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._closeEscPopup),this._popup.removeEventListener("mousedown",this._closeOverlayClick)}},{key:"_handleCloseButton",value:function(e){(e.target.classList.contains("popup")||e.target.classList.contains("popup__close"))&&this.close()}},{key:"_closeEscPopup",value:function(e){"Escape"===e.key&&this.close()}},{key:"_closeOverlayClick",value:function(e){e.target===e.currentTarget&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupButtonClose.addEventListener("click",(function(t){return e._handleCloseButton(t)}))}},{key:"resetButtonText",value:function(){this._submitButton&&(this._submitButton.textContent=this._defaultButtonText)}}])&&s(t.prototype,n),e}();function c(e){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(e,t,n){return(p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function _(e,t){return!t||"object"!==c(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return _(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._link=t._popup.querySelector(".popup__image"),t._title=t._popup.querySelector(".popup__subtitle"),t._popupForm=t._popup.querySelector(".popup__form"),t}return t=u,(n=[{key:"open",value:function(e){this._link.src=e.link,this._link.alt=e.title,this._title.textContent=e.title,p(d(u.prototype),"open",this).call(this)}}])&&f(t.prototype,n),u}(l);function v(e){return(v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(e,t,n){return(b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function k(e,t){return(k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function C(e,t){return!t||"object"!==v(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function g(e){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&k(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(r);if(o){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return C(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._popupForm=n._popup.querySelector(".popup__form"),n._formSubmit=t,n}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputs=Array.from(this._popupForm.querySelectorAll(".popup__input")),this._inputValues={},this._inputs.forEach((function(t){return e._inputValues[t.name]=t.value})),this._inputValues}},{key:"setEventListeners",value:function(){var e=this;b(g(u.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._submitButton.textContent="Сохранение...",e._formSubmit(e._getInputValues())}))}},{key:"close",value:function(){b(g(u.prototype),"close",this).call(this),this._popupForm.reset()}}])&&m(t.prototype,n),u}(l);function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var E=function(){function e(t,n,r,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t,this._about=n,this._avatar=r,this._id=o}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent,avatar:this._avatar,id:this._id}}},{key:"setUserInfo",value:function(e){e.name&&(this._name.textContent=e.name),e.about&&(this._about.textContent=e.about),e.avatar&&(this._avatar.src=e.avatar),e._id&&(this._id=e._id)}}])&&w(t.prototype,n),e}();function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var L=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"_handleResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getProfile",value:function(){var e=this;return fetch("".concat(this._baseUrl,"users/me"),{headers:this._headers}).then((function(t){return e._handleResponse(t)}))}},{key:"setAvatar",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"cards"),{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then((function(e){return t._handleResponse(e)}))}},{key:"updateProfile",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then((function(e){return t._handleResponse(e)}))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this._baseUrl,"cards"),{headers:this._headers}).then((function(t){return e._handleResponse(t)}))}},{key:"addCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.title,link:e.link})}).then((function(e){return t._handleResponse(e)}))}},{key:"getData",value:function(){return Promise.all([this.getProfile(),this.getInitialCards()])}},{key:"addLike",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then((function(e){return t._handleResponse(e)}))}},{key:"removeLike",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._handleResponse(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._handleResponse(e)}))}},{key:"editAvatar",value:function(e){var t=this,n=e;return fetch("".concat(this._baseUrl,"users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify(n)}).then((function(e){return t._handleResponse(e)}))}}])&&O(t.prototype,n),e}();function P(e){return(P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function B(e,t,n){return(B="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function j(e,t){return(j=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function R(e,t){return!t||"object"!==P(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function I(e){return(I=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var x=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&j(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=I(r);if(o){var n=I(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return R(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._form=t._popup.querySelector(".popup__form"),t._formSubmit=t._popup.querySelector(".popup__save"),t._submit=null,t}return t=u,(n=[{key:"setNewHandler",value:function(e){this._submit=e}},{key:"setEventListeners",value:function(){var e=this;B(I(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._formSubmit.textContent="Удаление...",e._submit()}))}},{key:"close",value:function(){B(I(u.prototype),"close",this).call(this),this._form.reset(),this._formSubmit.textContent="Да"}}])&&q(t.prototype,n),u}(l),T=document.querySelector(".profile__edit-button"),D=document.querySelector(".profile-popup"),U=document.querySelector(".profile"),A=D.querySelector(".popup__form"),V=U.querySelector(".profile__name"),N=D.querySelector(".popup__input_field_name"),F=U.querySelector(".profile__description"),H=D.querySelector(".popup__input_field_description"),J=U.querySelector(".profile__add-card"),M=U.querySelector(".profile__avatar"),Q=document.querySelector(".card-popup"),z=document.querySelector(".elements"),$=Q.querySelector(".popup__form"),G=document.querySelector(".image-popup"),K=document.querySelector(".delete-popup"),W=document.querySelector(".avatar-popup"),X=W.querySelector(".popup__form");function Y(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var Z=new i(e,A);Z.enableValidation();var ee=new S(D,(function(e){he.updateProfile(e).then((function(e){return te.setUserInfo(e)})).then(ee.close()).catch((function(e){return console.log(e)})).finally(ee.resetButtonText())}));ee.setEventListeners();var te=new E(V,F,M,null),ne=new S(W,(function(e){he.editAvatar(e).then((function(e){te.setUserInfo(e)})).then((function(e){return ne.close()})).catch((function(e){return console.log(e)})).finally(ne.resetButtonText())}));ne.setEventListeners();var re=new i(e,X);re.enableValidation();var oe=new y(G);function ie(e,t){oe.open(e,t)}function ue(e){return new n({data:e,cardSelector:".card-template",handleCardClick:ie,selfId:te.getUserInfo().id,handleDeleteButton:le,handleLikeClick:ce,popupDeleteConfirmation:se}).renderCard()}oe.setEventListeners();var ae=new a((function(e){ae.addCard(ue(e))}),z),se=new x(K,le);function le(e,t){he.deleteCard(e).then((function(e){t.remove(),se.close()})).catch((function(e){console.log(e.toString())}))}function ce(e,t,n,r){e.classList.contains("element__like-button_active")?he.removeLike(t).then((function(e){r.setLikes(e,n),r.handleLikeCard()})).catch((function(e){return console.log(e.toString())})):he.addLike(t).then((function(e){r.setLikes(e,n),r.handleLikeCard()})).catch((function(e){return console.log(e.toString())}))}se.setEventListeners();var fe=new i(e,$);fe.enableValidation();var pe=new S(Q,(function(e){he.addCard(e).then((function(e){ae.addCustomCard(ue(e))})).then(pe.close()).catch((function(e){return console.log("Ошибка, рвать её мать!"+e.toString())})).finally(pe.resetButtonText())}));pe.setEventListeners();var he=new L({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-27/",headers:{authorization:"26c8d168-5e2f-4321-b420-05dcb41e9965","Content-Type":"application/json"}});he.getData().then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],u=!0,a=!1;try{for(n=n.call(e);!(u=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);u=!0);}catch(e){a=!0,o=e}finally{try{u||null==n.return||n.return()}finally{if(a)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return Y(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Y(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];te.setUserInfo(o),ae.addInitialCards(i)})).then().catch((function(e){return console.log("Ошибка, рвать её мать!"+e.toString())})),T.addEventListener("click",(function(){ee.open(),Z.resetError();var e=te.getUserInfo();N.value=e.name,H.value=e.about})),J.addEventListener("click",(function(){pe.open(),fe.resetError()})),M.addEventListener("click",(function(){re.resetError(),ne.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,