(()=>{"use strict";var t={form:".popup__form",input:".popup__input",inputInvalidClass:"error_invalid",submitButton:".popup__save",inactiveButtonClass:"popup__save_invalid"};function e(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var n=function(){function t(e,n,r,o,i,u,a){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._data=e,this._title=e.name,this._link=e.link,this._likes=e.likes,this._likeQuantity=e.likes.length,this._id=e._id,this._ownerId=e.owner._id,this._selfId=o,this._cardSelector=n,this._handleCardClick=r,this._handleLikeClick=u,this._handleDeleteButton=i,this._popupDeleteConfirmation=a}var n,r;return n=t,(r=[{key:"cardId",value:function(){return this._id}},{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"renderCard",value:function(){var t=this;this._element=this._getTemplate();var e=this._element.querySelector(".element__cover"),n=this._element.querySelector(".element__title"),r=this._element.querySelector(".element__like-button"),o=this._element.querySelector(".element__like-button_quantity"),i=this._element.querySelector(".element__delete-button");return e.src=this._link,n.textContent=this._title,e.alt=this._title,this._likeCounter=this._element.querySelector(".element__like-button_quantity"),this._ownerId!==this._selfId&&(i.style.display="none"),this._likes.some((function(e){return t._selfId===e._id}))&&r.classList.add("element__like-button_active"),o.textContent=this._likeQuantity,this._setEventListeners(),this._element}},{key:"setLikes",value:function(){cardLikes.textContent=this._likeQuantity}},{key:"_handleDeleteConfirmation",value:function(){var t=this;this._popupDeleteConfirmation.setNewHandler((function(){return t._handleDeleteCard()})),this._popupDeleteConfirmation.open()}},{key:"_handleDeleteCard",value:function(){this._handleDeleteButton(this._id,this._element)}},{key:"_handleLikeCard",value:function(){this._element.querySelector(".element__like-button").classList.toggle("element__like-button_active")}},{key:"_setEventListeners",value:function(){var t=this;this._element.querySelector(".element__delete-button").addEventListener("click",(function(){return t._handleDeleteConfirmation()})),this._element.querySelector(".element__like-button").addEventListener("click",(function(e){t._handleLikeCard(),t._handleLikeClick(e.target,t._id,t._likeCounter)})),this._element.querySelector(".element__cover").addEventListener("click",(function(){return t._handleCardClick({title:t._title,link:t._link})}))}}])&&e(n.prototype,r),t}();function r(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var i=function(){function t(e,n){var r=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),o(this,"_isValid",(function(t){var e=r._form.querySelector("#".concat(t.name,"-error"));!t.validity.valid||t.validity.typeMismatch?(e.textContent=t.validationMessage,e.classList.add(r._inputInvalidClass)):(e.textContent=t.validationMessage,e.classList.remove(r._inputInvalidClass))})),o(this,"_setEventListeners",(function(){r._formInputs.forEach((function(t){t.addEventListener("input",(function(){r._isValid(t),r.setSubmitButtonState()}))}))})),o(this,"enableValidation",(function(){r._setEventListeners(),r._form.addEventListener("submit",(function(t){t.preventDefault()}))})),this._form=n,this._formInputs=Array.from(this._form.querySelectorAll(e.input)),this._input=e.input,this._inputInvalidClass=e.inputInvalidClass,this._submitButton=this._form.querySelector(e.submitButton),this._inactiveButtonClass=e.inactiveButtonClass}var e,n;return e=t,(n=[{key:"setSubmitButtonState",value:function(){this._form.checkValidity()?(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.removeAttribute("disabled")):(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.setAttribute("disabled","disabled"))}},{key:"resetError",value:function(){var t=this;this._formInputs.forEach((function(e){var n=t._form.querySelector("#".concat(e.name,"-error"));n.textContent="",n.classList.remove(t._inputInvalidClass)})),this.setSubmitButtonState()}}])&&r(e.prototype,n),t}();function u(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var a=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=e,this._container=n}var e,n;return e=t,(n=[{key:"addCard",value:function(t){this._container.append(t)}},{key:"addCustomCard",value:function(t){this._container.prepend(t)}},{key:"addInitialCards",value:function(t){var e=this;t.forEach((function(t){e._renderer(t)}))}}])&&u(e.prototype,n),t}();function s(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var c=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=e,this._closeEscPopup=this._closeEscPopup.bind(this),this._closeOverlayClick=this._closeOverlayClick.bind(this),this._popupButtonClose=this._popup.querySelector(".popup__close"),this._submitButton&&(this._defaultButtonText=this._submitButton.textContent)}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._closeEscPopup),this._popup.addEventListener("mousedown",this._closeOverlayClick)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._closeEscPopup),this._popup.removeEventListener("mousedown",this._closeOverlayClick)}},{key:"_handleCloseButton",value:function(t){(t.target.classList.contains("popup")||t.target.classList.contains("popup__close"))&&this.close()}},{key:"_closeEscPopup",value:function(t){"Escape"===t.key&&this.close()}},{key:"_closeOverlayClick",value:function(t){t.target===t.currentTarget&&this.close()}},{key:"resetButtonState",value:function(){this._submitButton&&(this._submitButton.textContent=this._defaultButtonText)}},{key:"setEventListeners",value:function(){var t=this;this._popupButtonClose.addEventListener("click",(function(e){return t._handleCloseButton(e)}))}},{key:"resetButtonText",value:function(){this._submitButton.textContent=this._defaultButtonText}}])&&s(e.prototype,n),t}();function l(t){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function f(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function p(t,e,n){return(p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=d(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function h(t,e){return(h=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function _(t,e){return!e||"object"!==l(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function d(t){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var y=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&h(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=d(r);if(o){var n=d(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return _(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._link=e._popup.querySelector(".popup__image"),e._title=e._popup.querySelector(".popup__subtitle"),e}return e=u,(n=[{key:"open",value:function(t){this._link.src=t.link,this._link.alt=t.title,this._title.textContent=t.title,p(d(u.prototype),"open",this).call(this)}}])&&f(e.prototype,n),u}(c);function v(t){return(v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function m(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function b(t,e,n){return(b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=S(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function k(t,e){return(k=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function g(t,e){return!e||"object"!==v(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function S(t){return(S=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var C=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&k(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=S(r);if(o){var n=S(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return g(this,t)});function u(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._popupForm=n._popup.querySelector(".popup__form"),n._formSubmit=e,n}return e=u,(n=[{key:"_getInputValues",value:function(){var t=this;return this._inputs=Array.from(this._popupForm.querySelectorAll(".popup__input")),this._inputValues={},this._inputs.forEach((function(e){return t._inputValues[e.name]=e.value})),this._inputValues}},{key:"setEventListeners",value:function(){var t=this;b(S(u.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(e){e.preventDefault(),t._formSubmit(t._getInputValues()),t.close()}))}},{key:"close",value:function(){b(S(u.prototype),"close",this).call(this),this._popupForm.reset()}}])&&m(e.prototype,n),u}(c);function w(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var E=function(){function t(e,n,r,o){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e,this._about=n,this._avatar=r,this._id=o}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent,avatar:this._avatar,id:this._id}}},{key:"setUserInfo",value:function(t){this._name.textContent=t.name,this._about.textContent=t.about,this._avatar.src=t.avatar,this._id=t._id}}])&&w(e.prototype,n),t}();function O(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var L=function(){function t(e){var n=e.baseUrl,r=e.headers;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=n,this._headers=r}var e,n;return e=t,(n=[{key:"_handleResponse",value:function(t){return t.ok?t.json():Promise.reject("Ошибка: ".concat(t.status))}},{key:"getProfile",value:function(){var t=this;return fetch("".concat(this._baseUrl,"users/me"),{headers:this._headers}).then((function(e){return t._handleResponse(e)}))}},{key:"setAvatar",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"cards"),{method:"PATCH",headers:this._headers,body:JSON.stringify(t)}).then((function(t){return e._handleResponse(t)}))}},{key:"updateProfile",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t.name,about:t.about})}).then((function(t){return e._handleResponse(t)}))}},{key:"getInitialCards",value:function(){var t=this;return fetch("".concat(this._baseUrl,"cards"),{headers:this._headers}).then((function(e){return t._handleResponse(e)}))}},{key:"addCard",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t.name,link:t.link})}).then((function(t){return e._handleResponse(t)}))}},{key:"getData",value:function(){return Promise.all([this.getProfile(),this.getInitialCards()])}},{key:"addLike",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"cards/likes/").concat(t),{method:"PUT",headers:this._headers}).then((function(t){return e._handleResponse(t)}))}},{key:"removeLike",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"cards/likes/").concat(t),{method:"DELETE",headers:this._headers}).then((function(t){return e._handleResponse(t)}))}},{key:"deleteCard",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"cards/").concat(t),{method:"DELETE",headers:this._headers}).then((function(t){return e._handleResponse(t)}))}},{key:"editAvatar",value:function(t){var e=this,n=t;return fetch("".concat(this._baseUrl,"users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify(n)}).then((function(t){return e._handleResponse(t)}))}}])&&O(e.prototype,n),t}();function P(t){return(P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function j(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function q(t,e,n){return(q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=I(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function B(t,e){return(B=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function R(t,e){return!e||"object"!==P(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function I(t){return(I=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var x=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&B(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=I(r);if(o){var n=I(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return R(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._form=e._popup.querySelector(".popup__form"),e._formSubmit=e._popup.querySelector(".popup__save"),e._submit=null,e}return e=u,(n=[{key:"setNewHandler",value:function(t){this._submit=t}},{key:"setEventListeners",value:function(){var t=this;q(I(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),console.log(t._form),t._formSubmit.textContent="Удаление...",t._submit()}))}},{key:"close",value:function(){q(I(u.prototype),"close",this).call(this),this._form.reset(),this.resetButtonText()}}])&&j(e.prototype,n),u}(c),T=document.querySelector(".profile__edit-button"),U=document.querySelector(".profile-popup"),D=document.querySelector(".profile"),A=U.querySelector(".popup__form"),V=D.querySelector(".profile__name"),N=U.querySelector(".popup__input_field_name"),H=D.querySelector(".profile__description"),F=U.querySelector(".popup__input_field_description"),J=D.querySelector(".profile__add-card"),M=D.querySelector(".profile__avatar"),Q=document.querySelector(".card-popup"),z=document.querySelector(".elements"),$=Q.querySelector(".popup__form"),G=document.querySelector(".image-popup"),K=document.querySelector(".delete-popup"),W=document.querySelector(".avatar-popup");function X(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var Y=new i(t,A);Y.enableValidation();var Z=new C(U,(function(t){ft.updateProfile(t),tt.setUserInfo(t)}));Z.setEventListeners();var tt=new E(V,H,M,null),et=new C(W,(function(t){ft.editAvatar(t).then((function(t){tt.setUserInfo(t)})).catch((function(t){return console.log(t)}))}));et.setEventListeners();var nt=new y(G);function rt(t,e){nt.open(t,e)}function ot(t){return new n(t,".card-template",rt,tt.getUserInfo().id,at,st,ut).renderCard()}nt.setEventListeners();var it=new a((function(t){it.addCard(ot(t))}),z),ut=new x(K,at);function at(t,e){ft.deleteCard(t).then((function(t){e.remove(),ut.close()})).catch((function(t){console.log(t.toString())})).finally((function(){return ut.resetButtonState()}))}function st(t,e,n){t.classList.contains("element__like-button_active")?ft.addLike(e).then((function(t){n.textContent=t.likes.length})).catch((function(t){return console.log(t.toString())})):ft.removeLike(e).then((function(t){return n.textContent=t.likes.length})).catch((function(t){return console.log(t.toString())}))}ut.setEventListeners();var ct=new i(t,$);ct.enableValidation();var lt=new C(Q,(function(t){ft.addCard(t).then((function(t){it.addCustomCard(ot(t))})).catch((function(t){return console.log("Ошибка, рвать её мать!"+t.toString())}))}));lt.setEventListeners();var ft=new L({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-27/",headers:{authorization:"26c8d168-5e2f-4321-b420-05dcb41e9965","Content-Type":"application/json"}});ft.getData().then((function(t){var e,n,r=(n=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i=[],u=!0,a=!1;try{for(n=n.call(t);!(u=(r=n.next()).done)&&(i.push(r.value),!e||i.length!==e);u=!0);}catch(t){a=!0,o=t}finally{try{u||null==n.return||n.return()}finally{if(a)throw o}}return i}}(e,n)||function(t,e){if(t){if("string"==typeof t)return X(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?X(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];tt.setUserInfo(o),it.addInitialCards(i)})).then().catch((function(t){return console.log("Ошибка, рвать её мать!"+t.toString())})),T.addEventListener("click",(function(){Z.open(),Y.resetError();var t=tt.getUserInfo();N.value=t.name,F.value=t.about})),J.addEventListener("click",(function(){lt.open(),ct.resetError()})),M.addEventListener("click",(function(){et.open()})),fetch("https://mesto.nomoreparties.co/v1/cohort-27/cards",{headers:{authorization:"26c8d168-5e2f-4321-b420-05dcb41e9965"}}).then((function(t){return t.json()})).then((function(t){console.log(t)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,