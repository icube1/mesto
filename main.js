(()=>{"use strict";var e={form:".popup__form",input:".popup__input",inputInvalidClass:"error_invalid",submitButton:".popup__save",inactiveButtonClass:"popup__save_invalid"};function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var n=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._title=t.name,this._link=t.link,this._cardSelector=n,this._handleCardClick=r}var n,r;return n=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".element__delete-button").addEventListener("click",(function(){return e._handleDeleteCard()})),this._element.querySelector(".element__like-button").addEventListener("click",(function(){return e._handleLikeCard()})),this._element.querySelector(".element__cover").addEventListener("click",(function(){return e._handleCardClick({title:e._title,link:e._link})}))}},{key:"renderCard",value:function(){this._element=this._getTemplate();var e=this._element.querySelector(".element__cover"),t=this._element.querySelector(".element__title");return e.src=this._link,t.textContent=this._title,e.alt=this._title,this._setEventListeners(),this._element}},{key:"_handleDeleteCard",value:function(){this._element.remove(),this._element=null}},{key:"_handleLikeCard",value:function(){this._element.querySelector(".element__like-button").classList.toggle("element__like-button_active")}}])&&t(n.prototype,r),e}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var i=function(){function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o(this,"_isValid",(function(e){var t=r._form.querySelector("#".concat(e.name,"-error"));!e.validity.valid||e.validity.typeMismatch?(t.textContent=e.validationMessage,t.classList.add(r._inputInvalidClass)):(t.textContent=e.validationMessage,t.classList.remove(r._inputInvalidClass))})),o(this,"_setEventListeners",(function(){r._formInputs.forEach((function(e){e.addEventListener("input",(function(){r._isValid(e),r.setSubmitButtonState()}))}))})),o(this,"enableValidation",(function(){r._setEventListeners(),r._form.addEventListener("submit",(function(e){e.preventDefault()}))})),this._form=n,this._formInputs=Array.from(this._form.querySelectorAll(t.input)),this._input=t.input,this._inputInvalidClass=t.inputInvalidClass,this._submitButton=this._form.querySelector(t.submitButton),this._inactiveButtonClass=t.inactiveButtonClass}var t,n;return t=e,(n=[{key:"setSubmitButtonState",value:function(){this._form.checkValidity()?(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.removeAttribute("disabled")):(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.setAttribute("disabled","disabled"))}},{key:"resetError",value:function(){var e=this;this._formInputs.forEach((function(t){var n=e._form.querySelector("#".concat(t.name,"-error"));n.textContent="",n.classList.remove(e._inputInvalidClass)})),this.setSubmitButtonState()}}])&&r(t.prototype,n),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=t,this._container=n}var t,n;return t=e,(n=[{key:"addCard",value:function(e){this._container.append(e)}},{key:"addInitialCards",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}}])&&a(t.prototype,n),e}();function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=t,this._closeEscPopup=this._closeEscPopup.bind(this),this._closeOverlayClick=this._closeOverlayClick.bind(this),this._popupButtonClose=this._popup.querySelector(".popup__close")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._closeEscPopup),this._popup.addEventListener("mousedown",this._closeOverlayClick)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._closeEscPopup),this._popup.removeEventListener("mousedown",this._closeOverlayClick)}},{key:"_handleCloseButton",value:function(e){(e.target.classList.contains("popup")||e.target.classList.contains("popup__close"))&&this.close()}},{key:"_closeEscPopup",value:function(e){"Escape"===e.key&&this.close()}},{key:"_closeOverlayClick",value:function(e){e.target===e.currentTarget&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupButtonClose.addEventListener("click",(function(t){return e._handleCloseButton(t)}))}}])&&s(t.prototype,n),e}();function c(e){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(e,t,n){return(p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=y(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function _(e,t){return!t||"object"!==c(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function y(e){return(y=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var d=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(r);if(o){var n=y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return _(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._link=t._popup.querySelector(".popup__image"),t._title=t._popup.querySelector(".popup__subtitle"),t}return t=a,(n=[{key:"open",value:function(e){this._link.src=e.link,this._link.alt=e.title,this._title.textContent=e.title,p(y(a.prototype),"open",this).call(this)}}])&&f(t.prototype,n),a}(l);function v(e){return(v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(e,t,n){return(b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function k(e,t){return(k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function g(e,t){return!t||"object"!==v(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function S(e){return(S=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&k(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(r);if(o){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return g(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._popupForm=n._popup.querySelector(".popup__form"),n._formSubmit=t,n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputs=Array.from(this._popupForm.querySelectorAll(".popup__input")),this._inputValues={},this._inputs.forEach((function(t){return e._inputValues[t.name]=t.value})),this._inputValues}},{key:"setEventListeners",value:function(){var e=this;b(S(a.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._formSubmit(e._getInputValues()),e.close()}))}},{key:"close",value:function(){b(S(a.prototype),"close",this).call(this),this._popupForm.reset()}}])&&m(t.prototype,n),a}(l);function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var E=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t,this._about=n,this._avatar=r}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent}}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._about.textContent=e.about}},{key:"setUserAvatar",value:function(e){this._avatar.src=e.avatar}}])&&w(t.prototype,n),e}();function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var P=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"_handleResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getProfile",value:function(){return fetch("".concat(this._baseUrl,"users/me"),{headers:this._headers}).then(this._handleResponse)}},{key:"updateProfile",value:function(e){return fetch("".concat(this._baseUrl,"users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._handleResponse)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"cards"),{headers:this._headers}).then(this._handleResponse)}},{key:"addCard",value:function(e){return fetch("".concat(this._baseUrl,"cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._handleResponse)}},{key:"getData",value:function(){return Promise.all([this.getInitialCards(),this.getProfile()])}}])&&O(t.prototype,n),e}();function L(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var j=document.querySelector(".profile__edit-button"),q=document.querySelector(".profile-popup"),B=document.querySelector(".profile"),I=q.querySelector(".popup__form"),R=B.querySelector(".profile__name"),T=q.querySelector(".popup__input_field_name"),A=B.querySelector(".profile__description"),U=q.querySelector(".popup__input_field_description"),x=B.querySelector(".profile__add-card"),V=B.querySelector(".profile__avatar"),D=document.querySelector(".card-popup"),F=document.querySelector(".elements"),M=D.querySelector(".popup__form"),N=new d(document.querySelector(".image-popup"));function J(e,t){N.open(e,t)}function z(e){return new n(e,".card-template",J).renderCard()}N.setEventListeners();var H=new u((function(e){H.addCard(z(e))}),F),$=new i(e,M);$.enableValidation();var G=new C(D,(function(e){H.addCard(z(e)),X.addCard(e)}));G.setEventListeners();var K=new i(e,I);K.enableValidation();var Q=new C(q,(function(e){X.updateProfile(e),W.setUserInfo(e)}));Q.setEventListeners();var W=new E(R,A,V),X=new P({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-27/",headers:{authorization:"26c8d168-5e2f-4321-b420-05dcb41e9965","Content-Type":"application/json"}});X.getData().then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return L(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?L(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];H.addInitialCards(o),W.setUserInfo(i),W.setUserAvatar(i)})),j.addEventListener("click",(function(){Q.open(),K.resetError();var e=W.getUserInfo();T.value=e.name,U.value=e.about})),x.addEventListener("click",(function(){G.open(),$.resetError()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXN0by8uL3NyYy91dGlscy92YWxpZGF0aW9uQ29uZmlnLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL3ZhbGlkYXRlLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvcGFnZXMvaW5kZXguanMiXSwibmFtZXMiOlsiZW5hYmxlVmFsaWRhdGlvbkNvbmZpZyIsImZvcm0iLCJpbnB1dCIsImlucHV0SW52YWxpZENsYXNzIiwic3VibWl0QnV0dG9uIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIkNhcmQiLCJkYXRhIiwiY2FyZFNlbGVjdG9yIiwiaGFuZGxlQ2FyZENsaWNrIiwidGhpcyIsIl90aXRsZSIsIm5hbWUiLCJfbGluayIsImxpbmsiLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZUNhcmRDbGljayIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJfZWxlbWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJfaGFuZGxlRGVsZXRlQ2FyZCIsIl9oYW5kbGVMaWtlQ2FyZCIsInRpdGxlIiwiX2dldFRlbXBsYXRlIiwiY2FyZENvdmVyIiwiY2FyZFRpdGxlIiwic3JjIiwidGV4dENvbnRlbnQiLCJhbHQiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJyZW1vdmUiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJGb3JtVmFsaWRhdG9yIiwiZm9ybUlucHV0Iiwic3BhbiIsIl9mb3JtIiwidmFsaWRpdHkiLCJ2YWxpZCIsInR5cGVNaXNtYXRjaCIsInZhbGlkYXRpb25NZXNzYWdlIiwiYWRkIiwiX2lucHV0SW52YWxpZENsYXNzIiwiX2Zvcm1JbnB1dHMiLCJmb3JFYWNoIiwiX2lzVmFsaWQiLCJzZXRTdWJtaXRCdXR0b25TdGF0ZSIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiX2lucHV0IiwiX3N1Ym1pdEJ1dHRvbiIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiY2hlY2tWYWxpZGl0eSIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZSIsIlNlY3Rpb24iLCJyZW5kZXJlciIsImNhcmRDb250YWluZXIiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiY2FyZCIsImFwcGVuZCIsImNhcmRzIiwiaXRlbSIsIlBvcHVwIiwicG9wdXAiLCJfcG9wdXAiLCJfY2xvc2VFc2NQb3B1cCIsImJpbmQiLCJfY2xvc2VPdmVybGF5Q2xpY2siLCJfcG9wdXBCdXR0b25DbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJldnQiLCJ0YXJnZXQiLCJjb250YWlucyIsImNsb3NlIiwia2V5IiwiY3VycmVudFRhcmdldCIsIl9oYW5kbGVDbG9zZUJ1dHRvbiIsIlBvcHVwV2l0aEltYWdlIiwiUG9wdXBXaXRoRm9ybSIsImZvcm1TdWJtaXQiLCJfcG9wdXBGb3JtIiwiX2Zvcm1TdWJtaXQiLCJfaW5wdXRzIiwiX2lucHV0VmFsdWVzIiwidmFsdWUiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJyZXNldCIsIlVzZXJJbmZvIiwiYWJvdXQiLCJhdmF0YXIiLCJfbmFtZSIsIl9hYm91dCIsIl9hdmF0YXIiLCJwcm9maWxlIiwiQXBpIiwiYmFzZVVybCIsImhlYWRlcnMiLCJfYmFzZVVybCIsIl9oZWFkZXJzIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsImZldGNoIiwidGhlbiIsIl9oYW5kbGVSZXNwb25zZSIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiYWxsIiwiZ2V0SW5pdGlhbENhcmRzIiwiZ2V0UHJvZmlsZSIsImJ1dHRvbkVkaXRQcm9maWxlIiwicG9wdXBQcm9maWxlIiwiZm9ybUVsZW1lbnQiLCJwcm9maWxlTmFtZSIsImlucHV0RmllbGROYW1lIiwicHJvZmlsZUFib3V0IiwiaW5wdXRGaWVsZERlc2MiLCJidXR0b25BZGRDYXJkUG9wdXAiLCJwcm9maWxlQXZhdGFyIiwicG9wdXBDYXJkIiwiY2FyZEVsZW1lbnRzIiwiY2FyZEVsZW1lbnQiLCJoYW5kbGVPcGVuSW1hZ2UiLCJvcGVuIiwiY2FyZFJlbmRlcmVyIiwiY2FyZEl0ZW0iLCJyZW5kZXJDYXJkIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJyZW5kZXJDYXJkcyIsImFkZENhcmQiLCJmb3JtVmFsaWRhdG9yQ2FyZCIsImVuYWJsZVZhbGlkYXRpb24iLCJwb3B1cEFkZENhcmQiLCJhcGkiLCJmb3JtVmFsaWRhdG9yUHJvZmlsZSIsInBvcHVwRWRpdFByb2ZpbGUiLCJ1cGRhdGVQcm9maWxlIiwidXNlclByb2ZpbGUiLCJzZXRVc2VySW5mbyIsImF1dGhvcml6YXRpb24iLCJnZXREYXRhIiwidXNlckluZm8iLCJhZGRJbml0aWFsQ2FyZHMiLCJzZXRVc2VyQXZhdGFyIiwicmVzZXRFcnJvciIsImdldFVzZXJJbmZvIl0sIm1hcHBpbmdzIjoibUJBQU8sSUFBTUEsRUFBeUIsQ0FDcENDLEtBQU0sZUFDTkMsTUFBTyxnQkFDUEMsa0JBQW1CLGdCQUNuQkMsYUFBYyxlQUNkQyxvQkFBcUIsdUIsMEtDTGpCQyxFLFdBQ0wsV0FBWUMsRUFBTUMsRUFBY0MsSSw0RkFBaUIsU0FDaERDLEtBQUtDLE9BQVNKLEVBQUtLLEtBQ25CRixLQUFLRyxNQUFRTixFQUFL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Syx1Q0EwRUwsZUFBZ0Isc0JBSXBCTixFQUFJTyxVQUFVdkMsTUFBSyxTQUFBM0csR0FDakIsSSxJQUFBLEcsRUFBQSxFLDRDQUEyQkEsSSxneEJBQXBCNkQsRUFBUCxLQUFjc0YsRUFBZCxLQUNBYixFQUFZYyxnQkFBZ0J2RixHQUM1QmtGLEVBQVlDLFlBQVlHLEdBQ3hCSixFQUFZTSxjQUFjRixNQU01Qi9CLEVBQWtCckcsaUJBQWlCLFNBL0JuQyxXQUNFOEgsRUFBaUJaLE9BQ2pCVyxFQUFxQlUsYUFDckIsSUFBTXhELEVBQVVpRCxFQUFZUSxjQUM1Qi9CLEVBQWVuQyxNQUFRUyxFQUFRekYsS0FDL0JxSCxFQUFlckMsTUFBUVMsRUFBUUwsU0EyQmpDa0MsRUFBbUI1RyxpQkFBaUIsU0FuRHBDLFdBQ0UySCxFQUFhVCxPQUNiTyxFQUFrQmMsaUIiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBlbmFibGVWYWxpZGF0aW9uQ29uZmlnID0ge1xuICBmb3JtOiAnLnBvcHVwX19mb3JtJyxcbiAgaW5wdXQ6ICcucG9wdXBfX2lucHV0JyxcbiAgaW5wdXRJbnZhbGlkQ2xhc3M6ICdlcnJvcl9pbnZhbGlkJyxcbiAgc3VibWl0QnV0dG9uOiAnLnBvcHVwX19zYXZlJyxcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogJ3BvcHVwX19zYXZlX2ludmFsaWQnLFxufTtcbiIsImNsYXNzIENhcmQge1xuXHRjb25zdHJ1Y3RvcihkYXRhLCBjYXJkU2VsZWN0b3IsIGhhbmRsZUNhcmRDbGljaykge1xuXHRcdHRoaXMuX3RpdGxlID0gZGF0YS5uYW1lO1xuXHRcdHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XG4gICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xuICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGljaztcblx0fVxuXG4gIF9nZXRUZW1wbGF0ZSgpIHtcbiAgICBjb25zdCBjYXJkID0gZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRTZWxlY3RvcilcbiAgICAgIC5jb250ZW50XG4gICAgICAucXVlcnlTZWxlY3RvcignLmVsZW1lbnQnKVxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcblxuICAgIHJldHVybiBjYXJkO1xuICB9XG4gIF9zZXRFdmVudExpc3RlbmVycygpIHsgIC8v0YHQu9GD0YjQsNGC0LXQu9C4INC00LvRjyDQutCw0YDRgtC+0YfQtdC6XG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fZGVsZXRlLWJ1dHRvbicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5faGFuZGxlRGVsZXRlQ2FyZCgpKTtcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19saWtlLWJ1dHRvbicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5faGFuZGxlTGlrZUNhcmQoKSk7XG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fY292ZXInKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuX2hhbmRsZUNhcmRDbGljayh7dGl0bGU6IHRoaXMuX3RpdGxlLCBsaW5rOiB0aGlzLl9saW5rfSkpO1xuICB9XG5cbiAgcmVuZGVyQ2FyZCgpIHsgIC8v0L7RgtGA0LjRgdC+0LLQutCwINC60LDRgNGC0L7Rh9C10LpcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcblxuICAgIGNvbnN0IGNhcmRDb3ZlciA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2NvdmVyJyk7XG4gICAgY29uc3QgY2FyZFRpdGxlID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fdGl0bGUnKTtcblxuICAgIGNhcmRDb3Zlci5zcmMgPSB0aGlzLl9saW5rO1xuICAgIGNhcmRUaXRsZS50ZXh0Q29udGVudCA9IHRoaXMuX3RpdGxlO1xuICAgIGNhcmRDb3Zlci5hbHQgPSB0aGlzLl90aXRsZTtcblxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG5cbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcbiAgfVxuXG4gIF9oYW5kbGVEZWxldGVDYXJkKCkgey8v0YPQtNCw0LvQtdC90LjQtSDQutCw0YDRgtC+0YfQtdC6XG4gICAgdGhpcy5fZWxlbWVudC5yZW1vdmUoKTtcbiAgICB0aGlzLl9lbGVtZW50ID0gbnVsbDtcbiAgfVxuXG4gIF9oYW5kbGVMaWtlQ2FyZCgpIHsvL9Cb0LDQudC6INC60LDRgNGC0L7Rh9C10LpcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19saWtlLWJ1dHRvbicpLmNsYXNzTGlzdC50b2dnbGUoJ2VsZW1lbnRfX2xpa2UtYnV0dG9uX2FjdGl2ZScpO1xuICB9XG59XG5leHBvcnQge0NhcmR9XG5cblxuIiwiY2xhc3MgRm9ybVZhbGlkYXRvciB7ICAvL9Ca0LvQsNGB0YEg0LTQu9GPINGE0L7RgNC8INCy0LDQu9C40LTQsNGG0LjQuFxuICBjb25zdHJ1Y3RvcihkYXRhLCBmb3JtKSB7XG4gICAgdGhpcy5fZm9ybSA9IGZvcm07XG4gICAgdGhpcy5fZm9ybUlucHV0cyA9IEFycmF5LmZyb20odGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKGRhdGEuaW5wdXQpKTtcblxuICAgIHRoaXMuX2lucHV0ID0gZGF0YS5pbnB1dDtcbiAgICB0aGlzLl9pbnB1dEludmFsaWRDbGFzcyA9IGRhdGEuaW5wdXRJbnZhbGlkQ2xhc3M7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGRhdGEuc3VibWl0QnV0dG9uKTtcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gZGF0YS5pbmFjdGl2ZUJ1dHRvbkNsYXNzO1xuICB9XG5cbiAgLy/Qo9GB0YLQsNC90L7QstC60LAg0YHQvtGB0YLQvtGP0L3QuNGPINC60L3QvtC/0LrQuFxuICBzZXRTdWJtaXRCdXR0b25TdGF0ZSgpIHtcbiAgICBjb25zdCBpc1ZhbGlkID0gdGhpcy5fZm9ybS5jaGVja1ZhbGlkaXR5KCk7XG5cbiAgICBpZihpc1ZhbGlkKSB7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCAnZGlzYWJsZWQnKTtcbiAgICB9XG4gIH1cblxuLy/QntCx0YDQsNCx0L7RgtGH0LjQuiDQv9C+0LvQtdC5INCy0LLQvtC00LBcbiAgLy8gX2hhbmRsZUZvcm1JbnB1dCgpIHtcbiAgLy8gICAvLyDQnNC10L3Rj9C10Lwg0YHQvtGB0YLQvtGP0L3QuNC1INC60L3QvtC/0LrQuCDQvtGC0L/RgNCw0LLQutC4INCyINC30LDQstC40YHQuNC80L7RgdGC0Lgg0L7RgiDQstCw0LvQuNC00L3QvtGB0YLQuCDRhNC+0YDQvNGLXG4gIC8vICAgdGhpcy5zZXRTdWJtaXRCdXR0b25TdGF0ZSgpO1xuICAvLyB9XG5cbiAgX2lzVmFsaWQgPSAoZm9ybUlucHV0KSA9PiB7ICAvL9C/0YDQvtCy0LXRgNC60LAg0LLQsNC70LjQtNC90L7RgdGC0Lgg0YTQvtGA0LzRiyDQuCDRg9GB0YLQsNC90L7QstC60LAg0YHQvtC+0LHRidC10L3QuNGPINC+0LEg0L7RiNC40LHQutC1XG4gICAgY29uc3Qgc3BhbiA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgIyR7Zm9ybUlucHV0Lm5hbWV9LWVycm9yYCk7XG5cbiAgICBpZiAoIWZvcm1JbnB1dC52YWxpZGl0eS52YWxpZCB8fCBmb3JtSW5wdXQudmFsaWRpdHkudHlwZU1pc21hdGNoKSB7XG4gICAgICBzcGFuLnRleHRDb250ZW50ID0gZm9ybUlucHV0LnZhbGlkYXRpb25NZXNzYWdlO1xuICAgICAgc3Bhbi5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0SW52YWxpZENsYXNzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3Bhbi50ZXh0Q29udGVudCA9IGZvcm1JbnB1dC52YWxpZGF0aW9uTWVzc2FnZTtcbiAgICAgIHNwYW4uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEludmFsaWRDbGFzcyk7XG4gICAgfVxuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzID0gKCkgPT4geyAgLy/RgdC70YPRiNCw0YLQtdC70Lgg0LTQu9GPINC/0L7Qu9C10Lkg0LLQstC+0LTQsFxuICAgIHRoaXMuX2Zvcm1JbnB1dHMuZm9yRWFjaCgoZm9ybUlucHV0KSA9PiB7XG4gICAgICBmb3JtSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2lzVmFsaWQoZm9ybUlucHV0KTtcbiAgICAgICAgdGhpcy5zZXRTdWJtaXRCdXR0b25TdGF0ZSgpO1xuICAgICAgICAvLyB0aGlzLl9oYW5kbGVGb3JtSW5wdXQoKVxuICAgICAgfSk7XG4gICAgfSlcbiAgfVxuXG4gIGVuYWJsZVZhbGlkYXRpb24gPSAoKSA9PiB7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldmVudCkgPT4ge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgIH0pXG4gIH1cbiAgcmVzZXRFcnJvcigpIHtcbiAgICB0aGlzLl9mb3JtSW5wdXRzLmZvckVhY2goKGZvcm1JbnB1dCkgPT4ge1xuICAgICAgY29uc3Qgc3BhbiA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgIyR7Zm9ybUlucHV0Lm5hbWV9LWVycm9yYCk7XG4gICAgICBzcGFuLnRleHRDb250ZW50ID0gJyc7XG4gICAgICBzcGFuLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5wdXRJbnZhbGlkQ2xhc3MpO1xuICAgICAgfSk7XG4gICAgdGhpcy5zZXRTdWJtaXRCdXR0b25TdGF0ZSgpO1xuICAgIH1cbn07XG5cblxuZXhwb3J0IHtGb3JtVmFsaWRhdG9yfVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbntcbiAgY29uc3RydWN0b3IocmVuZGVyZXIsIGNhcmRDb250YWluZXIpIHtcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgIHRoaXMuX2NvbnRhaW5lciA9IGNhcmRDb250YWluZXI7XG4gIH1cbiAgYWRkQ2FyZChjYXJkKSB7XG4gICAgdGhpcy5fY29udGFpbmVyLmFwcGVuZChjYXJkKTtcbiAgfVxuICBhZGRJbml0aWFsQ2FyZHMoY2FyZHMpIHtcbiAgICBjYXJkcy5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgIHRoaXMuX3JlbmRlcmVyKGl0ZW0pXG4gICAgfSk7XG4gIH1cbiB9XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwKSB7XG4gICAgdGhpcy5fcG9wdXAgPSBwb3B1cDtcbiAgICB0aGlzLl9jbG9zZUVzY1BvcHVwID0gdGhpcy5fY2xvc2VFc2NQb3B1cC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX2Nsb3NlT3ZlcmxheUNsaWNrID0gdGhpcy5fY2xvc2VPdmVybGF5Q2xpY2suYmluZCh0aGlzKTtcbiAgICB0aGlzLl9wb3B1cEJ1dHRvbkNsb3NlID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19jbG9zZScpO1xuICB9XG5cbiAgb3BlbigpIHtcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKCdwb3B1cF9vcGVuZWQnKTtcblxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9jbG9zZUVzY1BvcHVwKTtcblxuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHRoaXMuX2Nsb3NlT3ZlcmxheUNsaWNrKTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoJ3BvcHVwX29wZW5lZCcpO1xuXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2Nsb3NlRXNjUG9wdXApO1xuICAgIHRoaXMuX3BvcHVwLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHRoaXMuX2Nsb3NlT3ZlcmxheUNsaWNrKTtcbiAgfVxuXG4gIF9oYW5kbGVDbG9zZUJ1dHRvbihldnQpIHtcbiAgICBpZihldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncG9wdXAnKSB8fCBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncG9wdXBfX2Nsb3NlJykpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gIH1cblxuICBfY2xvc2VFc2NQb3B1cChldnQpIHsgLy/Ql9Cw0LrRgNGL0YLQuNC1IHBvcHVwINC/0YDQuCDQvdCw0LbQsNGC0LjQuCBFc2NcbiAgICBpZiAoZXZ0LmtleSA9PT0gJ0VzY2FwZScpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gIH1cblxuICBfY2xvc2VPdmVybGF5Q2xpY2soZXZ0KSB7IC8v0JfQsNC60YDRi9GC0LjQtSBwb3B1cCDQv9GA0Lgg0LrQu9C40LrQtSDQvdCwINC+0LLQtdGA0LvQtdC5XG4gICAgaWYgKGV2dC50YXJnZXQgPT09IGV2dC5jdXJyZW50VGFyZ2V0KSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICB9XG5cblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9wb3B1cEJ1dHRvbkNsb3NlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2dCkgPT4gdGhpcy5faGFuZGxlQ2xvc2VCdXR0b24oZXZ0KSk7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXApIHtcbiAgICBzdXBlcihwb3B1cCk7XG4gICAgdGhpcy5fbGluayA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW1hZ2UnKTtcbiAgICB0aGlzLl90aXRsZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fc3VidGl0bGUnKTtcbiAgfVxuXG4gIG9wZW4oZGF0YSkge1xuICAgIHRoaXMuX2xpbmsuc3JjID0gZGF0YS5saW5rO1xuICAgIHRoaXMuX2xpbmsuYWx0ID0gZGF0YS50aXRsZTtcbiAgICB0aGlzLl90aXRsZS50ZXh0Q29udGVudCA9IGRhdGEudGl0bGU7XG4gICAgc3VwZXIub3BlbigpXG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cCwgZm9ybVN1Ym1pdCkge1xuICAgIHN1cGVyKHBvcHVwKTtcbiAgICB0aGlzLl9wb3B1cEZvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm0nKTtcbiAgICB0aGlzLl9mb3JtU3VibWl0ID0gZm9ybVN1Ym1pdDtcbiAgfVxuXG4gIF9nZXRJbnB1dFZhbHVlcygpIHtcbiAgICB0aGlzLl9pbnB1dHMgPSBBcnJheS5mcm9tKHRoaXMuX3BvcHVwRm9ybS5xdWVyeVNlbGVjdG9yQWxsKCcucG9wdXBfX2lucHV0JykpO1xuICAgIHRoaXMuX2lucHV0VmFsdWVzID0ge31cbiAgICB0aGlzLl9pbnB1dHMuZm9yRWFjaCgoaW5wdXQpID0+IHRoaXMuX2lucHV0VmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWUpO1xuICAgIHJldHVybiB0aGlzLl9pbnB1dFZhbHVlcztcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbiAgICB0aGlzLl9wb3B1cEZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2dCkgPT4ge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLl9mb3JtU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH0pXG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICBzdXBlci5jbG9zZSgpO1xuICAgIHRoaXMuX3BvcHVwRm9ybS5yZXNldCgpO1xuICAgIC8vIHRoaXMuX3BvcHVwRm9ybS50ZXh0Q29udGVudCA9ICcnXG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcbiAgY29uc3RydWN0b3IobmFtZSwgYWJvdXQsIGF2YXRhcikge1xuICAgIHRoaXMuX25hbWUgPSBuYW1lO1xuICAgIHRoaXMuX2Fib3V0ID0gYWJvdXQ7XG4gICAgdGhpcy5fYXZhdGFyID0gYXZhdGFyXG4gIH1cblxuICBnZXRVc2VySW5mbygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZTogdGhpcy5fbmFtZS50ZXh0Q29udGVudCxcbiAgICAgIGFib3V0OiB0aGlzLl9hYm91dC50ZXh0Q29udGVudFxuICAgIH07XG4gIH1cblxuICBzZXRVc2VySW5mbyhwcm9maWxlKSB7XG4gICAgdGhpcy5fbmFtZS50ZXh0Q29udGVudCA9IHByb2ZpbGUubmFtZTtcbiAgICB0aGlzLl9hYm91dC50ZXh0Q29udGVudCA9IHByb2ZpbGUuYWJvdXQ7XG4gIH1cbiAgc2V0VXNlckF2YXRhcihwcm9maWxlKSB7XG4gICAgdGhpcy5fYXZhdGFyLnNyYyA9IHByb2ZpbGUuYXZhdGFyO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBBcGkge1xuICBjb25zdHJ1Y3Rvcih7IGJhc2VVcmwsIGhlYWRlcnMgfSkge1xuICAgIHRoaXMuX2Jhc2VVcmwgPSBiYXNlVXJsO1xuICAgIHRoaXMuX2hlYWRlcnMgPSBoZWFkZXJzO1xuICB9XG5cbiAgX2hhbmRsZVJlc3BvbnNlKHJlcykge1xuICAgIGlmIChyZXMub2spIHtcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgIH1cbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYNCe0YjQuNCx0LrQsDogJHtyZXMuc3RhdHVzfWApO1xuICB9XG5cbiAgZ2V0UHJvZmlsZSgpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH11c2Vycy9tZWAsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnNcbiAgICB9KVxuICAgIC50aGVuKHRoaXMuX2hhbmRsZVJlc3BvbnNlKTtcbiAgfVxuXG4gIHVwZGF0ZVByb2ZpbGUoZGF0YSkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfXVzZXJzL21lYCwge1xuICAgICAgbWV0aG9kOiAnUEFUQ0gnLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZTogZGF0YS5uYW1lLFxuICAgICAgICBhYm91dDogZGF0YS5hYm91dCxcbiAgICAgIH0pXG4gICAgfSlcbiAgICAgIC50aGVuKHRoaXMuX2hhbmRsZVJlc3BvbnNlKTtcbiAgICB9XG5cbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfWNhcmRzYCwge1xuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVyc1xuICAgIH0pXG4gICAgICAudGhlbih0aGlzLl9oYW5kbGVSZXNwb25zZSk7XG4gIH1cbiAgYWRkQ2FyZChkYXRhKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9Y2FyZHNgLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWU6IGRhdGEubmFtZSxcbiAgICAgICAgbGluazogZGF0YS5saW5rXG4gICAgICB9KVxuICAgIH0pXG4gICAgLnRoZW4odGhpcy5faGFuZGxlUmVzcG9uc2UpO1xuICB9XG4gIGdldERhdGEoKSB7XG4gICAgcmV0dXJuIFByb21pc2UuYWxsKFt0aGlzLmdldEluaXRpYWxDYXJkcygpLCB0aGlzLmdldFByb2ZpbGUoKV0pXG4gIH1cbn1cbiIsIlxuXG5pbXBvcnQgJy4vaW5kZXguY3NzJztcbmltcG9ydCB7ZW5hYmxlVmFsaWRhdGlvbkNvbmZpZ30gZnJvbSAnLi4vdXRpbHMvdmFsaWRhdGlvbkNvbmZpZy5qcyc7XG5pbXBvcnR7Q2FyZH0gZnJvbSAnLi4vY29tcG9uZW50cy9DYXJkLmpzJztcbmltcG9ydHtGb3JtVmFsaWRhdG9yfSBmcm9tICcuLi9jb21wb25lbnRzL3ZhbGlkYXRlLmpzJztcbmltcG9ydCBTZWN0aW9uIGZyb20gJy4uL2NvbXBvbmVudHMvU2VjdGlvbi5qcyc7XG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcydcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyc7XG5pbXBvcnQgVXNlckluZm8gZnJvbSAnLi4vY29tcG9uZW50cy9Vc2VySW5mby5qcyc7XG5pbXBvcnQgQXBpIGZyb20gJy4uL2NvbXBvbmVudHMvQXBpJztcblxuY29uc3QgYnV0dG9uRWRpdFByb2ZpbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fZWRpdC1idXR0b24nKTtcbmNvbnN0IHBvcHVwUHJvZmlsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlLXBvcHVwJyk7XG5jb25zdCBwcm9maWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGUnKTtcbmNvbnN0IGZvcm1FbGVtZW50ID0gcG9wdXBQcm9maWxlLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybScpXG5jb25zdCBwcm9maWxlTmFtZSA9IHByb2ZpbGUucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX25hbWUnKTtcbmNvbnN0IGlucHV0RmllbGROYW1lID0gcG9wdXBQcm9maWxlLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW5wdXRfZmllbGRfbmFtZScpO1xuY29uc3QgcHJvZmlsZUFib3V0ID0gcHJvZmlsZS5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fZGVzY3JpcHRpb24nKTtcbmNvbnN0IGlucHV0RmllbGREZXNjID0gcG9wdXBQcm9maWxlLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW5wdXRfZmllbGRfZGVzY3JpcHRpb24nKTtcbmNvbnN0IGJ1dHRvbkFkZENhcmRQb3B1cCA9IHByb2ZpbGUucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2FkZC1jYXJkJyk7XG5jb25zdCBwcm9maWxlQXZhdGFyID0gcHJvZmlsZS5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYXZhdGFyJyk7XG5jb25zdCBwb3B1cENhcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZC1wb3B1cCcpO1xuY29uc3QgY2FyZEVsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRzJyk7XG5jb25zdCBjYXJkRWxlbWVudCA9IHBvcHVwQ2FyZC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm0nKTtcbmNvbnN0IHBvcHVwSW1hZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaW1hZ2UtcG9wdXAnKTtcbmNvbnN0IGFwaUluZm8gPSB7XG4gIHVybDogJ2h0dHBzOi8vbWVzdG8ubm9tb3JlcGFydGllcy5jby92MS9jb2hvcnQtMjcvJyxcbiAgdG9rZW46ICcyNmM4ZDE2OC01ZTJmLTQzMjEtYjQyMC0wNWRjYjQxZTk5NjUnXG59XG5cbi8vVE9ETzpcbi8v0J7RgtC+0LHRgNCw0LbQtdC90LjQtSDQutC+0LvQuNGH0LXRgdGC0LLQsCDQu9Cw0LnQutC+0LJcbi8v0L/QvtC/0LDQvyDRg9C00LDQu9C10L3QuNGPXG4vL9Cj0LTQsNC70LXQvdC40LUg0LrQsNGA0YLQvtGH0LrQuFxuLy/Qv9C+0YHRgtCw0L3QvtCy0LrQsCDQu9Cw0LnQutCwINGH0LXRgNC10LcgUFVUXG4vL9GD0LTQsNC70LXQvdC40LUg0LvQsNC50LrQsCDRh9C10YDQtdC3IERFTEVURVxuLy/QvtCx0L3QvtCy0LvQtdC90LjQtSDQsNCy0LDRgtCw0YDQsFxuLy/Qm9C+0LDQtNC10YDRiyDQtNC70Y8g0LLRgdC10YUg0YTQvtGA0LxcblxuLy/Qn9GA0LXQtNC30LDQs9GA0YPQttC10L3QvdGL0LUg0LrQsNGA0YLQvtGH0LrQuFxuY29uc3QgaGFuZGxlT3BlbkltYWdlID0gbmV3IFBvcHVwV2l0aEltYWdlKHBvcHVwSW1hZ2UpO1xuaGFuZGxlT3BlbkltYWdlLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbmZ1bmN0aW9uIGhhbmRsZUNhcmRDbGljayhuYW1lLCBsaW5rKSB7IC8v0J7RgtC60YDRi9GC0LjQtSDRg9Cy0LXQu9C40YfQtdC90L3QvtC5INC60LDRgNGC0L7Rh9C60LhcbiAgaGFuZGxlT3BlbkltYWdlLm9wZW4obmFtZSwgbGluayk7XG59O1xuZnVuY3Rpb24gY2FyZFJlbmRlcmVyKGNhcmRJdGVtKSB7IC8v0L7RgtGA0LjRgdC+0LLQutCwINC60LDRgNGC0L7Rh9C60LhcbiAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKGNhcmRJdGVtLCAnLmNhcmQtdGVtcGxhdGUnLCBoYW5kbGVDYXJkQ2xpY2spO1xuICBjb25zdCBjYXJkRWxlbWVudCA9IGNhcmQucmVuZGVyQ2FyZCgpO1xuICByZXR1cm4gY2FyZEVsZW1lbnQ7XG59XG5cbmNvbnN0IHJlbmRlckNhcmRzID0gbmV3IFNlY3Rpb24oKGl0ZW0pID0+IHtcbiAgcmVuZGVyQ2FyZHMuYWRkQ2FyZChjYXJkUmVuZGVyZXIoaXRlbSkpXG59LCBjYXJkRWxlbWVudHMpO1xuXG5cbi8v0J/QntCfLdCQ0J/Qqzpcbi8vINCd0L7QstCw0Y8g0LrQsNGA0YLQvtGH0LrQsFxuY29uc3QgZm9ybVZhbGlkYXRvckNhcmQgPSBuZXcgRm9ybVZhbGlkYXRvcihlbmFibGVWYWxpZGF0aW9uQ29uZmlnLCBjYXJkRWxlbWVudCk7XG5mb3JtVmFsaWRhdG9yQ2FyZC5lbmFibGVWYWxpZGF0aW9uKCk7Ly8g0LLQsNC70LjQtNCw0YbQuNGPINC/0L7Qvy3QsNC/0LAg0LrQsNGA0YLQvtGH0LrQuFxuXG5jb25zdCBwb3B1cEFkZENhcmQgPSBuZXcgUG9wdXBXaXRoRm9ybShwb3B1cENhcmQsIGhhbmRsZVN1Ym1pdENhcmQpO1xucG9wdXBBZGRDYXJkLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbmZ1bmN0aW9uIG9wZW5BZGRDYXJkUG9wdXAoKSB7XG4gIHBvcHVwQWRkQ2FyZC5vcGVuKCk7XG4gIGZvcm1WYWxpZGF0b3JDYXJkLnJlc2V0RXJyb3IoKTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlU3VibWl0Q2FyZChmb3JtKSB7XG4gIHJlbmRlckNhcmRzLmFkZENhcmQoY2FyZFJlbmRlcmVyKGZvcm0pKTtcbiAgYXBpLmFkZENhcmQoZm9ybSlcbn1cblxuLy/Qn9GA0L7RhNC40LvRjFxuY29uc3QgZm9ybVZhbGlkYXRvclByb2ZpbGUgPSBuZXcgRm9ybVZhbGlkYXRvcihlbmFibGVWYWxpZGF0aW9uQ29uZmlnLCBmb3JtRWxlbWVudCk7XG5mb3JtVmFsaWRhdG9yUHJvZmlsZS5lbmFibGVWYWxpZGF0aW9uKCk7Ly/QstCw0LvQuNC00LDRhtC40Y8g0YTQvtGA0LzRiyDQv9GA0L7RhNC40LvRj1xuXG5jb25zdCBwb3B1cEVkaXRQcm9maWxlID0gbmV3IFBvcHVwV2l0aEZvcm0ocG9wdXBQcm9maWxlLCBoYW5kbGVTdWJtaXRQcm9maWxlKTtcbnBvcHVwRWRpdFByb2ZpbGUuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuY29uc3QgdXNlclByb2ZpbGUgPSBuZXcgVXNlckluZm8ocHJvZmlsZU5hbWUsIHByb2ZpbGVBYm91dCwgcHJvZmlsZUF2YXRhcik7XG5cbmZ1bmN0aW9uIGhhbmRsZVVzZXJQcm9maWxlKCkgeyAvL9C+0YLQutGA0YvRgtC40LUg0L/QvtC/LdCw0L/QsCDQv9GA0L7RhNC40LvRjyDRgSDQv9C10YDQtdC90L7RgdC+0Lwg0LIg0LjQvdC/0YPRgtGLXG4gIHBvcHVwRWRpdFByb2ZpbGUub3BlbigpO1xuICBmb3JtVmFsaWRhdG9yUHJvZmlsZS5yZXNldEVycm9yKCk7XG4gIGNvbnN0IHByb2ZpbGUgPSB1c2VyUHJvZmlsZS5nZXRVc2VySW5mbygpO1xuICBpbnB1dEZpZWxkTmFtZS52YWx1ZSA9IHByb2ZpbGUubmFtZTtcbiAgaW5wdXRGaWVsZERlc2MudmFsdWUgPSBwcm9maWxlLmFib3V0O1xufVxuZnVuY3Rpb24gaGFuZGxlU3VibWl0UHJvZmlsZShmb3JtKSB7IC8vINGB0LDQsdC80LjRgiDQv9C+0L8t0LDQv9CwINC/0YDQvtGE0LjQu9GPXG4gIGFwaS51cGRhdGVQcm9maWxlKGZvcm0pO1xuICB1c2VyUHJvZmlsZS5zZXRVc2VySW5mbyhmb3JtKTtcbn1cblxuLy9BUElcbmNvbnN0IGFwaSA9IG5ldyBBcGkoe1xuICBiYXNlVXJsOiBhcGlJbmZvLnVybCxcbiAgaGVhZGVyczoge1xuICAgIGF1dGhvcml6YXRpb246IGFwaUluZm8udG9rZW4sXG4gICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICB9XG59KTtcblxuYXBpLmdldERhdGEoKS50aGVuKGRhdGEgPT4ge1xuICBjb25zdCBbY2FyZHMsIHVzZXJJbmZvIF0gPSBkYXRhO1xuICByZW5kZXJDYXJkcy5hZGRJbml0aWFsQ2FyZHMoY2FyZHMpO1xuICB1c2VyUHJvZmlsZS5zZXRVc2VySW5mbyh1c2VySW5mbyk7XG4gIHVzZXJQcm9maWxlLnNldFVzZXJBdmF0YXIodXNlckluZm8pXG59KVxuXG5cblxuLy/QodC70YPRiNCw0YLQtdC70Lgg0LrQvdC+0L/QvtC6INC/0L7Qvy3QsNC/0L7QslxuYnV0dG9uRWRpdFByb2ZpbGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVVc2VyUHJvZmlsZSk7XG5idXR0b25BZGRDYXJkUG9wdXAuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvcGVuQWRkQ2FyZFBvcHVwKTtcblxuXG4vL9Cf0YDQvtCy0LXRgNC60LAg0YDQsNCx0L7RgtGLINGB0LXRgNCy0LXRgNCwXG5cbi8vIGZldGNoKCdodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTI3L2NhcmRzJywge1xuLy8gICBoZWFkZXJzOiB7XG4vLyAgICAgYXV0aG9yaXphdGlvbjogJzI2YzhkMTY4LTVlMmYtNDMyMS1iNDIwLTA1ZGNiNDFlOTk2NSdcbi8vICAgfVxuLy8gfSlcbi8vICAgLnRoZW4ocmVzID0+IHJlcy5qc29uKCkpXG4vLyAgIC50aGVuKChjYXJkcykgPT4ge1xuLy8gICAgIGNvbnNvbGUubG9nKGNhcmRzKTtcbi8vICAgfSk7XG4iXSwic291cmNlUm9vdCI6IiJ9